--Output from UnknownAccountException when federated authentication is not enabled--
ERROR (FederatedRealm): Authentication attempt for federated provider, denying attempt as federation integration disabled
--Output from UnknownAccountException when principal is not supplied--
ERROR (FederatedRealm): Authentication attempt for federated provider, denying attempt as no persistent identifier was provided
--Output from UnknownAccountException when credential is not supplied--
ERROR (FederatedRealm): Authentication attempt for federated provider, denying attempt as no credential was provided
--Output from DisabledAccountException when user doesnt already exist and autoprovision disabled--
ERROR (FederatedRealm): Authentication attempt for federated provider, denying attempt as federation integration is denying automated account provisioning
--Output from Basic account created when autoprovision is enabled--
INFO (FederatedRealm): No subject represented by http://test.com!http://sp.test.com!1234 exists in local repository, provisioning new account
INFO (FederatedRealm): Successfully logged in subject [2]http://test.com!http://sp.test.com!1234 using federated source
--Output from Existing, disabled account throws DisabledAccountException--
WARN (FederatedRealm): Attempt to authenticate using using federated principal mapped to a locally disabled account [3]http://test.com!http://sp.test.com!1234
--Output from Failing subject save for new account throws RuntimeException--
INFO (FederatedRealm): No subject represented by http://test.com!http://sp.test.com!1234 exists in local repository, provisioning new account
ERROR (FederatedRealm): org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 0 errors
--Output from Failing subject save for session record throws RuntimeException--
ERROR (FederatedRealm): org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 0 errors

